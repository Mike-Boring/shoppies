{"version":3,"sources":["images/bg1.jpg","images/bg2.jpg","components/shoppies.js","App.js","reportWebVitals.js","index.js"],"names":["Shoppies","props","componentDidMount","setState","nominatedList","ls","get","getMovies","searchTerm","state","request","then","res","searchResult","body","catch","err","console","log","handleChange","event","target","value","handleSubmit","preventDefault","selectMovie","length","newNominatedList","push","nominatedListSaved","set","document","getElementById","classList","remove","unselectMovie","id","filteredNewNominatedList","filter","movie","imdbID","resetView","add","imageUrl","this","Poster","map","className","Title","src","width","alt","Button","variant","onClick","Carousel","Item","bg1","Caption","bg2","onSubmit","type","name","placeholder","onChange","Year","Plot","e","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4a4bc16a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg1.ef617897.jpg\";","export default __webpack_public_path__ + \"static/media/bg2.47710e89.jpg\";","import React, { Component } from \"react\";\nimport \"./shoppies.css\"\nimport request from \"superagent\"\nimport Button from 'react-bootstrap/Button';\nimport Carousel from 'react-bootstrap/Carousel'\nimport bg1 from \"../images/bg1.jpg\"\nimport bg2 from \"../images/bg2.jpg\"\nimport ls from 'local-storage'\n\n\nclass Shoppies extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          searchResult: {},\n          nominatedList: [],\n          searchTerm: \"\"\n        };\n    }\n\n    componentDidMount = () => {\n        this.setState(() => ({\n            nominatedList: ls.get('nominatedList') || []\n          }));\n    }\n\n\n    //http://www.omdbapi.com/?t=rocky&apikey=40431a19\n    getMovies = () => {\n        let searchTerm = this.state.searchTerm\n        request\n          .get(\"https://www.omdbapi.com/?t=\" + searchTerm + \"&apikey=40431a19\")\n          .then(res => {\n            this.setState((state) => ({\n                searchResult: res.body\n              }));\n          })\n          .catch(err => {\n            console.log(\"fetch error\");\n          });\n    };\n\n    handleChange = event => {\n        this.setState(() => ({\n            searchTerm: event.target.value\n          }));\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.getMovies()\n        this.setState(() => ({\n            searchTerm: \"\"\n          }));\n    };\n\n    selectMovie = () => {\n        if (this.state.nominatedList.length < 4) {\n            let newNominatedList = [...this.state.nominatedList];\n            newNominatedList.push(this.state.searchResult)\n            this.setState(() => ({\n                nominatedList: newNominatedList\n            }));\n            let nominatedListSaved = newNominatedList\n            ls.set('nominatedList', nominatedListSaved) \n\n        } else {\n            let newNominatedList = [...this.state.nominatedList];\n            newNominatedList.push(this.state.searchResult)\n            this.setState(() => ({\n                nominatedList: newNominatedList\n            }));\n            let nominatedListSaved = newNominatedList\n            ls.set('nominatedList', nominatedListSaved) \n            document.getElementById('completedBannerBg').classList.remove(\"hide\");\n        }\n    }\n\n    unselectMovie = (id) => {\n        let newNominatedList = [...this.state.nominatedList];\n        let filteredNewNominatedList = newNominatedList.filter(movie => { \n            return movie.imdbID !== id;\n        })\n        this.setState(() => ({\n            nominatedList: filteredNewNominatedList\n          }));\n        let nominatedListSaved = filteredNewNominatedList\n        ls.set('nominatedList', nominatedListSaved) \n    }\n    resetView = () => {\n        document.getElementById('completedBannerBg').classList.add(\"hide\");\n        this.setState(() => ({\n            nominatedList: [],\n            searchResult: {}\n        }));\n        ls.set('nominatedList', []) \n    }\n\n    render() {\n        let imageUrl = this.state.searchResult.Poster\n        let selectMovie = this.selectMovie\n        let nominatedDisplayCopy =  [...this.state.nominatedList]\n        let nominatedList = nominatedDisplayCopy.map((movie)=>{\n            return (\n                <div className=\"nominatedMovie\" key={movie.imdbID}>\n                    <h3 className=\"movieTitle\">{movie.Title}</h3>\n                    <img src={movie.Poster} width=\"180px\" alt={movie.Title}/><br /><br/>\n                    <Button variant=\"dark\" className=\"stretch\" onClick={() => this.unselectMovie(movie.imdbID)}>Remove Nomination</Button>\n                </div>\n            )\n        })\n        let buttonCheck = () => {\n            if (this.state.nominatedList.filter(e => e.imdbID === this.state.searchResult.imdbID).length > 0) {\n                return <Button variant=\"dark\" className=\"stretch\" onClick={() => this.unselectMovie(this.state.searchResult.imdbID)}>Remove Nomination</Button>\n            } else {\n                return <Button variant=\"dark\" className=\"stretch\" onClick={selectMovie}>Nominate</Button>\n            }\n        }\n        return (\n            <div className=\"mainbg\">\n\n            <div className=\"banner\">\n                {/* <div className=\"topdiv\"></div> */}\n                <Carousel>\n                    <Carousel.Item>\n                        <img\n                        className=\"d-block w-100\"\n                        src={bg1}\n                        alt=\"First slide\"\n                        />\n                        <Carousel.Caption>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                        className=\"d-block w-100\"\n                        src={bg2}\n                        alt=\"Third slide\"\n                        />\n                        <Carousel.Caption>\n                        </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n                <br/><br/>\n            </div>\n            <div className=\"main\">\n                <div className=\"searchInput\">\n                    <h1 className=\"white\">Welcome to The Shoppies: Movie awards for entrepreneurs</h1><br />\n                    <h2 className=\"white\">Search for 5 movies to nominate below.</h2><br />\n                    <form onSubmit= {this.handleSubmit}>\n                        <input\n                            type=\"text\"\n                            name=\"search\"\n                            className=\"searchFormInput\"\n                            placeholder=\"Enter A Movie Name to Search For........\"\n                            value={this.state.searchTerm}\n                            onChange={this.handleChange}\n                        />\n                        &nbsp;&nbsp;<Button variant=\"dark\">SUBMIT</Button>\n                    </form>\n                </div>\n                <div className=\"content\">\n                    <div className=\"searchResults\">\n                        <h2>Search Results</h2>\n                        {this.state.searchResult.Title && <h2 className=\"movieTitle\">{this.state.searchResult.Title}</h2>}\n                        \n                        <img src={imageUrl} width=\"300\" alt={this.state.searchResult.Title}/><br /><br/>\n                        {this.state.searchResult.Year && <h3 className=\"stretch\">({this.state.searchResult.Year})</h3>}\n                        <h3>{this.state.searchResult.Plot}</h3>\n                        <br/>\n                        {this.state.searchResult.Title && buttonCheck()}\n                        \n                    </div>\n                    <div className=\"nominatedDisplay\">\n                        <h2>My 5 Shoppies Nominations</h2>\n                        <div className=\"nominatedListContainer\">\n                            {nominatedList}\n                        </div>\n                    </div>\n                </div>\n                <br/>\n                <br/>\n                <div id=\"completedBannerBg\" className=\"hide\">\n                    <div id=\"completedBanner\" >\n                        <h1>YOU HAVE NOMINATED YOUR 5 MOVIES</h1>\n                        <h3>Thank you for your nominations.</h3>\n                        <Button variant=\"dark\"  onClick={this.resetView} >Reset</Button>&nbsp;&nbsp;<Button variant=\"dark\"  onClick={this.resetView} >Submit</Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer\">\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Shoppies","import './App.css';\nimport Shoppies from './components/shoppies';\n\nfunction App() {\n  return (\n    <Shoppies />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}